"use strict";

// (*) Продвинутые задания на использование функций
// В этих задачах мы уже усложним работу с функциями. 
// Они необязательны и тут можно попробовать свои силы.
// Учтите, что проверка кода в таких заданиях осуществляется автоматически, 
// через программу. Поэтому нужно четко следовать инструкции.
// Вы можете сначала решить у себя в редакторе кода, а потом вставить сюда.
// Каждая задача проверяется отдельно, но по порядку, 
// так что вы будете получать разные уведомления при проверке.

// Задачи:

// 1) Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба 
// (тоже базовая математика, иногда используется в создании анимаций). 
// Эта функция принимает в себя целое число со значением длины ребра куба. 
// Ответ выведите в формате строки, который изображен в примерах.

// Если в функцию попал неправильный аргумент или вычислить значения невозможно 
// - вернуть строку "При вычислении произошла ошибка"
// НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и 
// тесты будут ломаться. Это из-за того, что этот оператор из более нового стандарта, 
// чем тут доступен.

// Примеры:

// calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'

// calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'

// calculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'

// calculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'

// calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'

// 2) Постепенно переходим к более реалистичным задачам :) 
// Вы обнаружите, что там используется все тоже самое.
// Напишите функцию, которая будет определять номер купе по переданному ей номеру места. 
// Функция принимает только целое число от 1 до 36.
// Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
// "Ошибка. Проверьте правильность введенного номера места"
// Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

// Пример:

// getCoupeNumber(33)  => 9

// getCoupeNumber(7)  => 2

// getCoupeNumber(300)  => "Таких мест в вагоне не существует"

// getCoupeNumber(0)  => "Таких мест в вагоне не существует"

// getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"

// getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"

// getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"


// Место для первой задачи

function calculateVolumeAndArea(length) {
	if (typeof (length) !=="number" || length < 0 || !Number.isInteger(length)) {
		return "При вычислении произошла ошибка";
	}

	let volume = 0;
	let area = 0;

	volume = length * length * length;
	area = 6 * (length * length);

	return `Объем куба: ${volume}, площадь всей поверхности: ${area}`;
    
}

console.log(calculateVolumeAndArea(5));

// Место для второй задачи
function getCoupeNumber(seatNumber) {
	if (typeof (seatNumber) !== "number" || seatNumber < 0 || !Number.isInteger(seatNumber)) {
		return "Ошибка. Проверьте правильность введенного номера места";
	}

	if (seatNumber === 0 || seatNumber > 36) {
		return "Таких мест в вагоне не существует";
	}
	// Статический метод Math.ceil() всегда округляет в большую сторону и 
	//возвращает наименьшее целое число, большее или равное заданному числу.
	return Math.ceil(seatNumber / 4);
}
console.log(getCoupeNumber(45));
